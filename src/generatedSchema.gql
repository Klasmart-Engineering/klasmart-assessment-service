# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Answer {
  answer: String
  date: Timestamp!
  maximumPossibleScore: Float
  minimumPossibleScore: Float
  score: Float
}

type Content {
  content_id: String!
  fileType: FileType
  h5p_id: String
  name: String
  parent_id: String
  subcontent_id: String
  type: String
}

type ContentScores {
  content: Content
  scores: [UserContentScore!]!
}

enum FileType {
  Audio
  Document
  H5P
  H5PExtension
  Image
  Video
}

type Mutation {
  addComment(comment: String!, room_id: String!, student_id: String!): TeacherComment @deprecated(reason: "Use setComment(room_id, student_id, comment) resolver")
  setComment(comment: String!, room_id: String!, student_id: String!): TeacherComment
  setScore(content_id: String!, room_id: String!, score: Float!, student_id: String!, subcontent_id: String): TeacherScore!
}

type Query {
  Room(room_id: String!): Room!
  ready: Boolean!
}

type Room {
  room_id: String!
  scores: [UserContentScore!]!
  scoresByContent: [ContentScores!]!
  scoresByUser: [UserScores!]!
  teacherComments: [TeacherComment!]!
  teacherCommentsByStudent: [TeacherCommentsByStudent!]!
}

type ScoreSummary {
  answers: [Answer!]!
  max: Float
  mean: Float
  median: Float
  medians: [Float!]
  min: Float
  scoreFrequency: Int!
  scores: [Int!]!
  sum: Int!
}

type TeacherComment {
  comment: String!
  date: Timestamp!
  lastUpdated: Timestamp!
  student: User!
  teacher: User!
}

type TeacherCommentsByStudent {
  student: User!
  teacherComments: [TeacherComment!]!
}

type TeacherScore {
  content: Content
  date: Timestamp!
  lastUpdated: Timestamp!
  score: Float!
  student: User!
  teacher: User!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type User {
  email: String
  familyName: String
  family_name: String @deprecated(reason: "use familyName instead")
  givenName: String
  given_name: String @deprecated(reason: "use givenName instead")
  userId: String!
  user_id: String! @deprecated(reason: "use userId instead")
}

type UserContentScore {
  content: Content
  score: ScoreSummary!
  seen: Boolean!
  teacherScores: [TeacherScore!]!
  user: User!
}

type UserScores {
  scores: [UserContentScore!]!
  user: User!
}
