# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

type Answer {
  answer: String
  date: Timestamp!
  maximumPossibleScore: Float!
  minimumPossibleScore: Float!
  score: Float
}

type Content {
  content_id: String!
  name: String!
  type: String!
}

type ContentScores {
  content: Content!
  scores: [UserContentScore!]!
}

type Mutation {
  addComment(comment: String!, room_id: String!, student_id: String!): TeacherComment
  setScore(content_id: String!, room_id: String!, score: Float!, student_id: String!): TeacherScore!
}

type Query {
  Room(room_id: String): Room!
  ready: Boolean!
}

type Room {
  room_id: String!
  scores: [UserContentScore!]!
  scoresByContent: [ContentScores!]!
  scoresByUser: [UserScores!]!
  teacherComments: [TeacherComment!]!
  teacherCommentsByStudent: [TeacherCommentsByStudent!]!
}

type ScoreSummary {
  answers: [Answer!]!
  max: Float
  mean: Float
  median: Float
  medians: [Float!]
  min: Float
  scoreFrequency: Int!
  scores: [Int!]!
  sum: Int!
}

type TeacherComment {
  comment: String!
  date: Timestamp!
  student: User!
  teacher: User!
}

type TeacherCommentsByStudent {
  student: User!
  teacherComments: [TeacherComment!]!
}

type TeacherScore {
  content: Content!
  date: Timestamp!
  score: Float!
  student: User!
  teacher: User!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type User {
  family_name: String
  given_name: String
  user_id: String!
}

type UserContentScore {
  content: Content!
  score: ScoreSummary!
  seen: Boolean!
  teacherScores: [TeacherScore!]!
  user: User!
}

type UserScores {
  scores: [UserContentScore!]!
  user: User!
}
